// <auto-generated />
using System;
using CalendarAPI.Services.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CalendarAPI.Services.Migrations
{
    [DbContext(typeof(EventDbContext))]
    [Migration("20220620030633_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CalendarAPI.Services.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BeginTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAllDayEvent")
                        .HasColumnType("bit");

                    b.Property<double?>("Lattitude")
                        .HasColumnType("float");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Longtitude")
                        .HasColumnType("float");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc1916c8-9432-405e-875e-8f55b47018e2"),
                            BeginTime = new DateTime(2021, 12, 21, 20, 34, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2021, 12, 21, 21, 34, 0, 0, DateTimeKind.Unspecified),
                            IsAllDayEvent = false,
                            Lattitude = 23.232441999999999,
                            LocationName = "Park Aveny",
                            Longtitude = 245.23244199999999,
                            Message = "Пойти за цветами",
                            Title = "Первое событие",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d51dc8ac-b93e-459e-b9e1-71890d015255"),
                            BeginTime = new DateTime(2021, 12, 21, 19, 34, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2021, 12, 21, 20, 34, 0, 0, DateTimeKind.Unspecified),
                            IsAllDayEvent = false,
                            Lattitude = 23.256442,
                            LocationName = "Minsk, 34",
                            Longtitude = 245.25644199999999,
                            Message = "Пойти в магазин",
                            Title = "Второе событие",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f72cb825-3f91-49df-83e7-ded4be310ac0"),
                            BeginTime = new DateTime(2021, 12, 21, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2021, 12, 21, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAllDayEvent = false,
                            Message = "Забрать посылку",
                            Title = "Третье событие",
                            UserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
